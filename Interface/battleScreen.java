/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Controladores.battleController;
import RPGGame.gameObjects;
import java.awt.BorderLayout;
import java.awt.Dimension;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 * Tela visual para exibição de elementos de batalha (opções, status, entre outros)
 *
 * @author Otávio
 */
public class battleScreen extends javax.swing.JPanel {

    /**
     * Creates new form battleScreen
     */
    public battleScreen(JFrame frame) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                initComponents();
            }
        });
    }

    public void startBattle(JFrame frame) {
        final Runnable r = new Runnable() {
            public void run() {
                battleController.treinamento(frame);
            }
        };
        new Thread(r).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        atkBasico = new javax.swing.JButton();
        usarPocaoVida = new javax.swing.JButton();
        fugir = new javax.swing.JButton();
        hpLabel = new javax.swing.JLabel();
        usarPocaoEnergia = new javax.swing.JButton();
        defender = new javax.swing.JButton();
        habilidades = new javax.swing.JButton();
        hpEnemy = new javax.swing.JProgressBar();
        enemyName = new javax.swing.JLabel();
        enemyLevel = new javax.swing.JLabel();
        myHp = new javax.swing.JProgressBar();
        hpLabel1 = new javax.swing.JLabel();
        myName = new javax.swing.JLabel();
        myLevel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descricaoEvento = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(0, 0, 0));

        atkBasico.setBackground(new java.awt.Color(0, 0, 0));
        atkBasico.setForeground(new java.awt.Color(255, 255, 255));
        atkBasico.setText("Ataque Básico");
        atkBasico.setFocusPainted(false);
        atkBasico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atkBasicoActionPerformed(evt);
            }
        });

        usarPocaoVida.setBackground(new java.awt.Color(0, 0, 0));
        usarPocaoVida.setForeground(new java.awt.Color(255, 255, 255));
        usarPocaoVida.setText("Poção HP x" + gameObjects.jogador.getNumeroPocoesVida());
        usarPocaoVida.setFocusPainted(false);
        usarPocaoVida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usarPocaoVidaActionPerformed(evt);
            }
        });

        fugir.setBackground(new java.awt.Color(0, 0, 0));
        fugir.setForeground(new java.awt.Color(255, 255, 255));
        fugir.setText("Escapar");
        fugir.setFocusPainted(false);
        fugir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fugirActionPerformed(evt);
            }
        });

        hpLabel.setForeground(new java.awt.Color(255, 255, 255));
        hpLabel.setText("HP");

        usarPocaoEnergia.setBackground(new java.awt.Color(0, 0, 0));
        usarPocaoEnergia.setForeground(new java.awt.Color(255, 255, 255));
        usarPocaoEnergia.setText("Poção EG x" + gameObjects.jogador.getNumeroPocoesEnergia());
        usarPocaoEnergia.setFocusPainted(false);
        usarPocaoEnergia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usarPocaoEnergiaActionPerformed(evt);
            }
        });

        defender.setBackground(new java.awt.Color(0, 0, 0));
        defender.setForeground(new java.awt.Color(255, 255, 255));
        defender.setText("Defender");
        defender.setFocusPainted(false);
        defender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defenderActionPerformed(evt);
            }
        });

        habilidades.setBackground(new java.awt.Color(0, 0, 0));
        habilidades.setForeground(new java.awt.Color(255, 255, 255));
        habilidades.setText("Habilidades");
        habilidades.setFocusPainted(false);
        habilidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                habilidadesActionPerformed(evt);
            }
        });

        hpEnemy.setMinimum(0);
        hpEnemy.setMaximum(battleController.getMonstroBatalha().getVidaMaximaFixo());
        hpEnemy.setValue(battleController.getMonstroBatalha().getVidaMaxima());

        enemyName.setForeground(new java.awt.Color(255, 255, 255));
        enemyName.setText(battleController.getMonstroBatalha().getNome());

        enemyLevel.setForeground(new java.awt.Color(255, 255, 255));
        enemyLevel.setText("Nível " + battleController.getMonstroBatalha().getNivel());

        myHp.setMinimum(0);
        myHp.setMaximum(gameObjects.jogador.getVidaMaxima());
        myHp.setValue(gameObjects.jogador.getVida());

        hpLabel1.setForeground(new java.awt.Color(255, 255, 255));
        hpLabel1.setText("HP");

        myName.setForeground(new java.awt.Color(255, 255, 255));
        myName.setText(gameObjects.jogador.getNome());

        myLevel.setForeground(new java.awt.Color(255, 255, 255));
        myLevel.setText("Nível " + gameObjects.jogador.getNivel());

        descricaoEvento.setBackground(new java.awt.Color(0, 0, 0));
        descricaoEvento.setColumns(20);
        descricaoEvento.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        descricaoEvento.setForeground(new java.awt.Color(255, 255, 255));
        descricaoEvento.setLineWrap(true);
        descricaoEvento.setRows(2);
        descricaoEvento.setText("Você encontrou um " + battleController.getMonstroBatalha().getNome() + "!");
        jScrollPane2.setViewportView(descricaoEvento);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(myName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(myLevel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enemyName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enemyLevel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hpLabel)
                        .addGap(18, 18, 18)
                        .addComponent(hpEnemy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(defender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(atkBasico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(habilidades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usarPocaoVida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(usarPocaoEnergia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fugir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(hpLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(myHp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enemyName)
                    .addComponent(enemyLevel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hpLabel)
                    .addComponent(hpEnemy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myName)
                    .addComponent(myLevel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hpLabel1)
                    .addComponent(myHp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(atkBasico)
                    .addComponent(usarPocaoVida))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usarPocaoEnergia)
                    .addComponent(defender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fugir)
                    .addComponent(habilidades))
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void atkBasicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atkBasicoActionPerformed
        this.descricaoEvento.setText(battleController.roundAtaque(gameObjects.jogador, battleController.getMonstroBatalha()));
        this.hpEnemy.setValue(battleController.getMonstroBatalha().getVidaMaxima());
        this.myHp.setValue(gameObjects.jogador.getVida());
    }//GEN-LAST:event_atkBasicoActionPerformed

    private void usarPocaoVidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usarPocaoVidaActionPerformed
        if (gameObjects.jogador.getNumeroPocoesVida() == 0) {
            this.descricaoEvento.setText("Você não tem poções o suficiente!");
        } else {
            gameObjects.jogador.recuperarVida();
            this.descricaoEvento.setText("Você usou uma poção e recuperou 30 pontos de vida!");
            this.usarPocaoVida.setText("Poção HP x" + gameObjects.jogador.getNumeroPocoesVida());
        }
    }//GEN-LAST:event_usarPocaoVidaActionPerformed

    private void fugirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fugirActionPerformed
        this.descricaoEvento.setText(battleController.tentarEscapar(gameObjects.jogador, battleController.getMonstroBatalha()));
        this.myHp.setValue(gameObjects.jogador.getVida());
    }//GEN-LAST:event_fugirActionPerformed

    private void usarPocaoEnergiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usarPocaoEnergiaActionPerformed
        if (gameObjects.jogador.getNumeroPocoesEnergia() == 0) {
            this.descricaoEvento.setText("Você não tem poções o suficiente!");
        } else {
            gameObjects.jogador.recuperarEnergia();
            this.descricaoEvento.setText("Você usou uma poção e recuperou 30 pontos de energia!");
            this.usarPocaoVida.setText("Poção EG x" + gameObjects.jogador.getNumeroPocoesEnergia());
        }
    }//GEN-LAST:event_usarPocaoEnergiaActionPerformed

    private void defenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defenderActionPerformed
        this.descricaoEvento.setText(battleController.roundDefesa(gameObjects.jogador, battleController.getMonstroBatalha()));
        this.myHp.setValue(gameObjects.jogador.getVida());
    }//GEN-LAST:event_defenderActionPerformed

    private void habilidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_habilidadesActionPerformed
        JFrame frameHabilidades = new JFrame("Habilidades");
        habilidades habilidades = new habilidades(frameHabilidades);
        frameHabilidades.pack();
        frameHabilidades.setLocationRelativeTo(null);
        frameHabilidades.setSize(new Dimension(300, 180));
        frameHabilidades.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frameHabilidades.add(habilidades, BorderLayout.CENTER);
        frameHabilidades.setVisible(true);
    }//GEN-LAST:event_habilidadesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atkBasico;
    private javax.swing.JButton defender;
    private javax.swing.JTextArea descricaoEvento;
    private javax.swing.JLabel enemyLevel;
    private javax.swing.JLabel enemyName;
    private javax.swing.JButton fugir;
    private javax.swing.JButton habilidades;
    private javax.swing.JProgressBar hpEnemy;
    private javax.swing.JLabel hpLabel;
    private javax.swing.JLabel hpLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JProgressBar myHp;
    private javax.swing.JLabel myLevel;
    private javax.swing.JLabel myName;
    private javax.swing.JButton usarPocaoEnergia;
    private javax.swing.JButton usarPocaoVida;
    // End of variables declaration//GEN-END:variables
}
